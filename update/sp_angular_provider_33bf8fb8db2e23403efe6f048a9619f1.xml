<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_angular_provider">
    <sp_angular_provider action="INSERT_OR_UPDATE">
        <name>ngAbeVariable</name>
        <script><![CDATA[function ngAbeVariable (ngAbeHighlighter) {

    function ngAbeVariableLink (scope) {

        let cancelHighlight;

        scope.highlightOn = function () {
            cancelHighlight = ngAbeHighlighter.activate(scope.vbl.cssSelector);
        };

        scope.highlightOff = function () {
            cancelHighlight ? cancelHighlight() : null;
        };
    }

    function ngAbeVariableCtrl ($scope) {

        $scope.value = $scope.val;

        let saveProcessors  = [];
        let loadProcessors = [];
        let resetProcessors = [];

        $scope.reset = reset;
        $scope.save = save;
        $scope.addSaveProcessor = addSaveProcessor;
        $scope.addLoadProcessor = addLoadProcessor;
        $scope.addResetProcessor = addResetProcessor;
        $scope.valIsDefault = valIsDefault;
        $scope.init = init;

        function init () {
            $scope.value = processOnLoad($scope.value ? $scope.value : $scope.vbl.defaultVal);
        }

        function addSaveProcessor (func) {
            saveProcessors.push(func);
        }

        function addLoadProcessor (func) {
            loadProcessors.push(func);
        }

        function addResetProcessor (func) {
            resetProcessors.push(func);
        }

        function processOnLoad (val) {
            return loadProcessors.reduce(function (acc, cv) {
                return cv(acc);
            }, val);
        }

        function processOnReset (val) {
            return resetProcessors.reduce(function (acc, cv) {
                return cv(acc);
            }, val);
        }

        function processBeforeSave (val) {
            return saveProcessors.reduce(function (acc, cv) {
                return cv(acc);
            }, val);
        }

        function valIsDefault () {
            return $scope.value === $scope.vbl.defaultVal;
        }

        function save (vbl, val) {

            $scope.value = val;

            $scope.$emit('abe.variable.save', {
                vbl: vbl,
                val: processBeforeSave(val)
            });
        }

        function reset () {
            $scope.value = processOnReset($scope.vbl.defaultVal);
            save($scope.vbl.sassVar, $scope.value);
        }
    }

    return {
        templateUrl: 'ng-abe-variable',
        scope: {
            vbl: '=avVar',
            val: '=avVal'
        },
        controller: ngAbeVariableCtrl,
        link: ngAbeVariableLink
    };
}]]></script>
        <sys_class_name>sp_angular_provider</sys_class_name>
        <sys_created_by>dylan.lindgren</sys_created_by>
        <sys_created_on>2018-12-21 00:16:43</sys_created_on>
        <sys_id>33bf8fb8db2e23403efe6f048a9619f1</sys_id>
        <sys_mod_count>77</sys_mod_count>
        <sys_name>ngAbeVariable</sys_name>
        <sys_package display_value="Advanced Branding Editor" source="x_si_abe">d5e53253db21230022757d9ebf9619b4</sys_package>
        <sys_policy/>
        <sys_scope display_value="Advanced Branding Editor">d5e53253db21230022757d9ebf9619b4</sys_scope>
        <sys_update_name>sp_angular_provider_33bf8fb8db2e23403efe6f048a9619f1</sys_update_name>
        <sys_updated_by>dylan.lindgren</sys_updated_by>
        <sys_updated_on>2018-12-27 03:26:57</sys_updated_on>
        <type>directive</type>
    </sp_angular_provider>
</record_update>
